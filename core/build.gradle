apply plugin: "com.android.library"

android {
    compileSdkVersion project.ext.targetSdkVersion

    defaultConfig {
        minSdkVersion project.ext.minSdkVersion
        targetSdkVersion project.ext.targetSdkVersion
        versionName project.ext.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs = ["-Xlint:unchecked"]
}

dependencies {
    implementation "com.android.support:appcompat-v7:${project.ext.android_support_version}"
    implementation "com.squareup.okhttp3:okhttp:${project.ext.okhttp_version}"
    api project(":reactive")
    testImplementation "junit:junit:${project.ext.junit_version}"
    testImplementation "com.android.support.test:runner:${project.ext.android_support_test_runner_version}"
    testImplementation "com.android.support.test:rules:${project.ext.android_support_test_rules_version}"
    testImplementation "com.android.support.test.espresso:espresso-core:${project.ext.android_support_test_espresso_version}"
    testImplementation "org.mockito:mockito-core:${project.ext.mockito_version}"
    testImplementation "org.robolectric:robolectric:${project.ext.robolectric_version}"
    testImplementation "com.squareup.okhttp3:mockwebserver:${project.ext.okhttp_version}"
}

apply from: "../gradle-mvn-push.gradle"

